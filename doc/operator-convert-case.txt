*operator-convert-case.txt*

Author:  mopp
License: MIT
Version: 0.1


==============================================================================
CONTENTS                                  *operator-convert-case-contents*
    Introduction                          |operator-convert-case-introduction|
    Mappings                               |operator-convert-case-mappings|
    Commands                               |operator-convert-case-commands|


==============================================================================
INTRODUCTION                              *operator-convert-case-introduction*

*operator-convert-case* is a Vim plugin to provide some operators to convert
a word case to another word case.

There are some convertion examples.
To lower_snake_case:
    lower_snake_case -> lower_snake_case
    UPPER_SNAKE_CASE -> upper_snake_case
    UpperCamelCase   -> upper_camel_case
    lowerCamelCase   -> lower_camel_case

To UPPER_SNAKE_CASE
    lower_snake_case -> LOWER_SNAKE_CASE
    UPPER_SNAKE_CASE -> UPPER_SNAKE_CASE
    UpperCamelCase   -> UPPER_CAMEL_CASE
    lowerCamelCase   -> LOWER_CAMEL_CASE

To lowerCamelCase
    lower_snake_case -> lowerSnakeCase
    UPPER_SNAKE_CASE -> upperSnakeCase
    UpperCamelCase   -> upperCamelCase
    lowerCamelCase   -> lowerCamelCase

To UpperCamelCase
    lower_snake_case -> LowerSnakeCase
    UPPER_SNAKE_CASE -> UpperSnakeCase
    UpperCamelCase   -> UpperCamelCase
    lowerCamelCase   -> LowerCamelCase

Requirements:
- |operator-user| 0.1.0 or later
  https://github.com/kana/vim-operator-user
- |vim-repeat|
  https://github.com/tpope/vim-repeat

Latest version:
https://github.com/mopp/vim-operator-convert-case.git




==============================================================================
MAPPINGS                                      *operator-convert-case-mappings*

<Plug>(operator-convert-case-lower-camel){motion} *<Plug>(operator-convert-case-lower-camel)*
    Convert text that {motion} into lowerCamelCase.

<Plug>(operator-convert-case-upper-camel){motion} *<Plug>(operator-convert-case-upper-camel)*
    Convert text that {motion} into UpperCamelCase.

<Plug>(operator-convert-case-lower-snake){motion} *<Plug>(operator-convert-case-lower-snake)*
    Convert text that {motion} into lower_snake_case.

<Plug>(operator-convert-case-upper-snake){motion} *<Plug>(operator-convert-case-upper-snake)*
    Convert text that {motion} into upper_snake_case.

<Plug>(operator-convert-case-toggle-upper-lower) *<Plug>(operator-convert-case-toggle-upper-lower)*
    See |:ToggleUpperLower|
    This commands supports . command using |vim-repeat|.

<Plug>(operator-convert-case-loop) *<Plug>(operator-convert-case-loop)*
    See |:ToggleUpperLower|
    This commands supports . command using |vim-repeat|.

<Plug>(operator-convert-case-convert) *<Plug>(operator-convert-case-convert)*
    See |:ConvertCase|
    This commands supports . command using |vim-repeat|.



==============================================================================
COMMANDS                                        *operator-convert-case-commands*

                                                *:ToggleUpperLower*
:ConvertCaseToggleUpperLower
    Toggle the word under the cursor between Upper case and lower case.

                                                *:ConvertCaseLoop*
:ConvertCaseLoop
    Loop the case of the word the cursor.

                                                *:ConvertCase*
:ConvertCase
    Convert the case of the word under the cursor.


==============================================================================
EXAMPLE                                        *operator-convert-case-example*

Here is an mapping example.
>
    nmap <Leader>,cl <Plug>(operator-convert-case-lower-camel)
    nmap <Leader>,cu <Plug>(operator-convert-case-upper-camel)
    nmap <Leader>,sl <Plug>(operator-convert-case-lower-snake)
    nmap <Leader>,su <Plug>(operator-convert-case-upper-snake)
    nmap <Leader>,tt <Plug>(operator-convert-case-toggle-upper-lower)
    nmap <Leader>,ll <Plug>(convert-case-loop)
    nmap <Leader>,cc <Plug>(operator-convert-case-convert)
<




==============================================================================

vim:ts=4:ft=help:norl:
